<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2012 CoreMedia AG
  ~
  ~ This file is part of Joala.
  ~
  ~ Joala is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ Joala is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with Joala.  If not, see <http://www.gnu.org/licenses/>.
  -->

<ruleset name="Custom ruleset"
         xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd"
         xsi:noNamespaceSchemaLocation="http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
  <description><![CDATA[
    PMD Rulesets to apply to the Joala Project.

    To suppress selected warnings in the code use for example:

        @SuppressWarnings("PMD.ShortMethodName")

    For available rulesets have a look at the version of PMD used by the maven-pmd-plugin. Currently it is
    pmd:pmd:4.3 which for example does not know empty.xml as ruleset.

    Links

    * http://maven.apache.org/plugins/maven-pmd-plugin/
    * http://pmd.sourceforge.net/howtomakearuleset.html
    * http://pmd.sourceforge.net/rules/index.html
    * https://github.com/pmd/pmd/tree/master/pmd/src/main/resources/rulesets/java
  ]]></description>

  <rule ref="rulesets/java/basic.xml"/>
  <rule ref="rulesets/java/braces.xml"/>
  <rule ref="rulesets/java/clone.xml"/>
  <rule ref="rulesets/java/codesize.xml"/>
  <rule ref="rulesets/java/controversial.xml">
    <exclude name="AvoidFinalLocalVariable"/>
    <exclude name="AvoidLiteralsInIfCondition"/>
    <exclude name="DefaultPackage"/>
    <exclude name="DataflowAnomalyAnalysis"/>
    <exclude name="NullAssignment"/>
    <exclude name="CallSuperInConstructor"/>
  </rule>
  <rule ref="rulesets/java/coupling.xml">
    <exclude name="LoosePackageCoupling"/>
  </rule>
  <rule ref="rulesets/java/design.xml"/>
  <rule ref="rulesets/java/finalizers.xml"/>
  <rule ref="rulesets/java/imports.xml"/>
  <rule ref="rulesets/java/j2ee.xml/DoNotCallSystemExit"/>
  <rule ref="rulesets/java/junit.xml"/>
  <rule ref="rulesets/java/logging-jakarta-commons.xml"/>
  <rule ref="rulesets/java/logging-java.xml"/>
  <rule ref="rulesets/java/migrating.xml"/>
  <rule ref="rulesets/java/naming.xml">
    <!-- exclude as we will include it with different settings, see below -->
    <exclude name="LongVariable"/>
  </rule>
  <rule ref="rulesets/java/naming.xml/LongVariable">
    <properties>
      <!-- Allowed length for variable names. -->
      <!--
      Discussion:

      The value might be adjusted if you think it is appropriate. The value should be enough to provide
      self documenting variable names and should still be easy to read. Thus as for books a typical line
      length limit is 50 to 70 characters the length for one single variable name should not be bigger.

      The default limit of 17 characters is considered to be to small to stick to self describing variable names.
      -->
      <property name="minimum" value="50"/>
    </properties>
  </rule>
  <rule ref="rulesets/java/typeresolution.xml"/>
  <rule ref="rulesets/java/optimizations.xml"/>
  <rule ref="rulesets/java/strings.xml"/>
  <rule ref="rulesets/java/strictexception.xml"/>
  <rule ref="rulesets/java/sunsecure.xml"/>
  <rule ref="rulesets/java/unusedcode.xml"/>

</ruleset>
