<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2012 CoreMedia AG
  ~
  ~ This file is part of Joala.
  ~
  ~ Joala is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ Joala is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with Foobar.  If not, see <http://www.gnu.org/licenses />.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <!-- Must not have joala-bom as parent as it must be built before joala-bom in order
       to provide artifacts to depend on during maven lifecycle. -->
  <parent>
    <groupId>com.coremedia</groupId>
    <artifactId>coremedia-parent</artifactId>
    <version>8</version>
    <!--suppress MavenModelInspection -->
    <relativePath />
  </parent>
  <groupId>net.joala</groupId>
  <artifactId>joala-build-tools</artifactId>
  <version>0.8.0</version>
  <name>Joala Build-Tools</name>
  <description><![CDATA[
    Support for Build-Tooling. Module can be taken as dependency to provide configuration
    data to reporting plugins for example like the checkstyle and PMD plugin.
  ]]></description>
  <inceptionYear>2011</inceptionYear>
  <organization>
    <name>CoreMedia AG</name>
    <url>http://www.coremedia.com/</url>
  </organization>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <prerequisites>
    <maven>3.0.4</maven>
  </prerequisites>
  <scm>
    <connection>scm:git:git@github.com:CoreMedia/joala.git</connection>
    <developerConnection>scm:git:git@github.com:CoreMedia/joala.git</developerConnection>
    <tag>joala-bom-0.8.0</tag>
    <url>https://github.com/CoreMedia/joala</url>
  </scm>
  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/CoreMedia/joala/issues</url>
  </issueManagement>
  <ciManagement>
    <system>jenkins</system>
    <url>http://pc-ci.coremedia.com/job/joala/</url>
  </ciManagement>
  <distributionManagement>
    <!-- Local Deployment, will be overridden by GitHub Pages Deployment on Release -->
    <site>
      <id>local-site</id>
      <name>Deployment as local artifacts</name>
      <url>${local.site.deploy.url}/${project.artifactId}</url>
    </site>
  </distributionManagement>
  <properties>
    <maven.deploy.skip>true</maven.deploy.skip>
    <github.global.server>github</github.global.server>
    <maven.compiler.source>1.6</maven.compiler.source>
    <maven.compiler.target>1.6</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <local.site.deploy.url>file://${user.home}/target/joala/site</local.site.deploy.url>
    <skipTests>true</skipTests>
  </properties>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.2</version>
          <configuration>
            <generateSitemap>true</generateSitemap>
          </configuration>
          <dependencies>
            <dependency>
              <!--
              | allows markdown syntax for site generation. To use it place files below
              | src/site/markdown/[filename].md
              -->
              <groupId>org.apache.maven.doxia</groupId>
              <artifactId>doxia-module-markdown</artifactId>
              <version>1.3</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.6</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>2.6</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  <profiles>
    <profile>
      <id>release</id>
      <distributionManagement>
        <!-- Workaround for Multi Module Site Deployment with GitHub Plugin -->
        <site>
          <id>github-pages-site</id>
          <name>Deployment through GitHub's site deployment plugin</name>
          <url>site/${project.version}/${project.artifactId}</url>
        </site>
      </distributionManagement>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>com.github.github</groupId>
              <artifactId>site-maven-plugin</artifactId>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-site-plugin</artifactId>
              <configuration>
                <!-- On release deployment will be done through GitHub Site Deployment. -->
                <skipDeploy>true</skipDeploy>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
  </profiles>

  <repositories>
    <repository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>coremedia.external.releases</id>
      <name>CoreMedia CMS</name>
      <url>https://repository.coremedia.com/nexus/content/groups/cms/</url>
      <layout>default</layout>
    </repository>
  </repositories>

</project>
