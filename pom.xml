<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright 2012 CoreMedia AG
  ~
  ~ This file is part of Joala.
  ~
  ~ Joala is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ Joala is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.coremedia</groupId>
    <artifactId>coremedia-parent</artifactId>
    <version>8</version>
    <!--suppress MavenModelInspection -->
    <relativePath/>
  </parent>
  <groupId>net.joala</groupId>
  <artifactId>joala-bom</artifactId>
  <version>0.7.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>Joala BOM</name>
  <description><![CDATA[
    This is the aggregator for the Joala project as well as the BOM (Bill of Materials) POM for Joala.
  ]]></description>
  <url>http://coremedia.github.com/joala</url>
  <inceptionYear>2011</inceptionYear>
  <organization>
    <name>CoreMedia AG</name>
    <url>http://www.coremedia.com/</url>
  </organization>
  <licenses>
    <license>
      <name>GNU General Public License, Version 3</name>
      <url>http://www.gnu.org/licenses/gpl.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>mmichael</id>
      <name>Mark Michaelis</name>
      <email>mark.michaelis@coremedia.com</email>
      <organization>CoreMedia AG</organization>
      <organizationUrl>http://www.coremedia.com/</organizationUrl>
      <roles>
        <role>architect</role>
        <role>developer</role>
      </roles>
      <timezone>+1</timezone>
    </developer>
    <developer>
      <id>fwienber</id>
      <name>Frank Wienberg</name>
      <email>frank.wienberg@coremedia.com</email>
      <organization>CoreMedia AG</organization>
      <organizationUrl>http://www.coremedia.com/</organizationUrl>
      <roles>
        <role>developer</role>
      </roles>
      <timezone>+1</timezone>
    </developer>
    <developer>
      <id>okummer</id>
      <name>Olaf Kummer</name>
      <email>olaf.kummer@coremedia.com</email>
      <organization>CoreMedia AG</organization>
      <organizationUrl>http://www.coremedia.com/</organizationUrl>
      <roles>
        <role>developer</role>
      </roles>
      <timezone>+1</timezone>
    </developer>
    <developer>
      <id>cweitend</id>
      <name>Christian Weitendorf</name>
      <email>christian.weitendorf@coremedia.com</email>
      <organization>CoreMedia AG</organization>
      <organizationUrl>http://www.coremedia.com/</organizationUrl>
      <roles>
        <role>developer</role>
      </roles>
      <timezone>+1</timezone>
    </developer>
  </developers>
  <prerequisites>
    <maven>3.0.4</maven>
  </prerequisites>
  <modules>
    <module>parent</module>
    <module>build-tools</module>
    <module>thirdparty-bom</module>
    <module>thirdparty-test-bom</module>
  </modules>
  <scm>
    <connection>scm:git:git@github.com:CoreMedia/joala.git</connection>
    <developerConnection>scm:git:git@github.com:CoreMedia/joala.git</developerConnection>
    <tag>HEAD</tag>
    <url>https://github.com/CoreMedia/joala</url>
  </scm>
  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/CoreMedia/joala/issues</url>
  </issueManagement>
  <ciManagement>
    <system>jenkins</system>
    <url>http://pc-ci.coremedia.com/job/joala/</url>
  </ciManagement>
  <distributionManagement>
    <!-- repository and snapshotRepository from parent POM -->
    <!-- Local Deployment, will be overridden by GitHub Pages Deployment on Release -->
    <site>
      <id>local-site</id>
      <name>Deployment as local artifacts</name>
      <url>${local.site.deploy.url}</url>
    </site>
  </distributionManagement>
  <!-- Properties -->
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven.compiler.source>1.6</maven.compiler.source>
    <maven.compiler.target>1.6</maven.compiler.target>
    <local.site.deploy.url>file://${user.home}/target/joala/site</local.site.deploy.url>
    <github.global.server>github</github.global.server>
    <generated.sources.root>${project.build.directory}/generated-sources</generated.sources.root>
    <!-- Signals to ignore approved noncompile dependencies which are recoginzed as unused. -->
    <dependency.ignore.approved.noncompile>true</dependency.ignore.approved.noncompile>
    <dependency.fail.onwarning>true</dependency.fail.onwarning>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>joala-conditions</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>joala-expressions</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>joala-matchers</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>joala-data</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>joala-bdd</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>joala-testlets</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>joala-labs</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>joala-time</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>joala-dns</artifactId>
        <version>${project.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>1.2.1</version>
        </plugin>
        <plugin>
          <groupId>com.github.github</groupId>
          <artifactId>site-maven-plugin</artifactId>
          <version>0.7</version>
          <configuration>
            <message>Creating site for ${project.artifactId}, ${project.version}</message>
            <!-- Workaround for Multi-Module-Deployment -->
            <path>${project.distributionManagement.site.url}</path>
            <!-- Must not be false as otherwise every other content on GH-pages is deleted. -->
            <merge>true</merge>
          </configuration>
          <executions>
            <execution>
              <id>github-site</id>
              <goals>
                <goal>site</goal>
              </goals>
              <phase>site-deploy</phase>
            </execution>
          </executions>
        </plugin>
        <!-- see http://code.google.com/p/sortpom/ -->
        <!-- To start: mvn com.google.code.sortpom:maven-sortpom-plugin:sort -->
        <plugin>
          <groupId>com.google.code.sortpom</groupId>
          <artifactId>maven-sortpom-plugin</artifactId>
          <version>2.0.0</version>
          <configuration>
            <!-- POM Code Convention - http://maven.apache.org/developers/conventions/code.html#POM_Code_Convention -->
            <sortOrderFile>recommended_2008_06.xml</sortOrderFile>
            <createBackupFile>false</createBackupFile>
            <expandEmptyElements>false</expandEmptyElements>
            <sortDependencies>true</sortDependencies>
            <sortPlugins>false</sortPlugins>
            <keepBlankLines>true</keepBlankLines>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.7</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>2.5</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>2.5.1</version>
          <configuration>
            <source>${maven.compiler.source}</source>
            <target>${maven.compiler.target}</target>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.5.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.7</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>1.1.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>1.4</version>
          <configuration>
            <!-- Skip for the first versions of Joala not deployed to Maven Central -->
            <skip>true</skip>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.3.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.4</version>
          <configuration>
            <skipIfEmpty>true</skipIfEmpty>
            <archive>
              <addMavenDescriptor>false</addMavenDescriptor>
              <forced>false</forced>
              <manifestEntries>
                <Built-By>CoreMedia</Built-By>
                <Build-Jdk>${java.version}</Build-Jdk>
                <Implementation-Title>${project.name} - ${project.artifactId}</Implementation-Title>
                <Implementation-Version>${project.version}</Implementation-Version>
                <Implementation-Build>${maven.build.timestamp}</Implementation-Build>
                <Implementation-Vendor-Id>com.coremedia</Implementation-Vendor-Id>
                <Implementation-Vendor>CoreMedia AG</Implementation-Vendor>
                <X-Compile-Source-JDK>${maven.compiler.source}</X-Compile-Source-JDK>
                <X-Compile-Target-JDK>${maven.compiler.target}</X-Compile-Target-JDK>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.9</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>2.5.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.3.2</version>
          <configuration>
            <autoVersionSubmodules>true</autoVersionSubmodules>
            <!--
            | if we don't do clean install javadoc aggregation will fail in release:perform because
            | aggregated javadoc for root project will run before the deploy goal of the submodules and therefore
            | also before the install of the submodules
            -->
            <preparationGoals>clean install</preparationGoals>
            <pushChanges>false</pushChanges>
            <localCheckout>true</localCheckout>
            <releaseProfiles>release</releaseProfiles>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.6</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-scm-plugin</artifactId>
          <version>1.7</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.1</version>
          <configuration>
            <generateSitemap>true</generateSitemap>
          </configuration>
          <dependencies>
            <dependency>
              <!--
              | allows markdown syntax for site generation. To use it place files below
              | src/site/markdown/[filename].md
              -->
              <groupId>org.apache.maven.doxia</groupId>
              <artifactId>doxia-module-markdown</artifactId>
              <version>1.3</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.12.3</version>
          <configuration>
            <junitArtifactName>junit:junit-dep</junitArtifactName>
          </configuration>
        </plugin>
        <!-- Used to check dependency/plugin versions for updates or to adjust the version for Joala -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>1.3.1</version>
          <configuration>
            <generateBackupPoms>false</generateBackupPoms>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <!-- Make it available in IDE -->
        <groupId>com.google.code.sortpom</groupId>
        <artifactId>maven-sortpom-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>2.9.1</version>
        <dependencies>
          <dependency>
            <groupId>net.joala</groupId>
            <artifactId>joala-build-tools</artifactId>
            <version>${project.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>2.7.1</version>
        <dependencies>
          <dependency>
            <groupId>net.joala</groupId>
            <artifactId>joala-build-tools</artifactId>
            <version>${project.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <DependencyConvergence/>
                <requireNoRepositories>
                  <message>Best Practice is to never define repositories in pom.xml (use a repository manager instead)
                  </message>
                  <allowedRepositories>
                    <allowedRepository>coremedia.external.releases</allowedRepository>
                  </allowedRepositories>
                </requireNoRepositories>
                <requirePluginVersions>
                  <message>Best Practice is to always define plugin versions!</message>
                </requirePluginVersions>
                <requireUpperBoundDeps/>
                <bannedDependencies>
                  <message><![CDATA[
Joala tries to avoid having any of the following dependencies:

  * Logging frameworks different to slf4j because we recommend and use slf4j. Use
    appropriate slf4j bridges to support commons-logging etc. from thirdparty
    dependencies.
  * JUnit - as Joala uses Hamcrest Libraries for Matchers they collide with
    junit:junit. It is preferred to use junit:junit-dep instead.
  * Joala Labs: Joala Labs are experimental and thus they must not leak into
    any transitive dependency inside the Joala project.
                  ]]></message>
                  <searchTransitive>true</searchTransitive>
                  <excludes>
                    <exclude>*:commons-logging</exclude>
                    <exclude>*:log4j</exclude>
                    <!-- Use junit-dep instead -->
                    <exclude>junit:junit</exclude>
                    <!-- joala-labs must only be used internally -->
                    <exclude>${project.groupId}:joala-labs:*:jar:compile</exclude>
                    <exclude>${project.groupId}:joala-labs:*:jar:runtime</exclude>
                  </excludes>
                </bannedDependencies>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-descriptor</id>
            <goals>
              <goal>attach-descriptor</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>analyze-dependencies</id>
            <goals>
              <goal>analyze-only</goal>
            </goals>
            <configuration>
              <failOnWarning>${dependency.fail.onwarning}</failOnWarning>
            </configuration>
          </execution>
          <execution>
            <id>analyze-dependency-duplicates</id>
            <goals>
              <goal>analyze-duplicate</goal>
            </goals>
            <phase>verify</phase>
          </execution>
          <execution>
            <id>analyze-dependency-management</id>
            <goals>
              <goal>analyze-dep-mgt</goal>
            </goals>
            <phase>verify</phase>
            <configuration>
              <failBuild>${dependency.fail.onwarning}</failBuild>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>2.9.1</version>
        <configuration>
          <configLocation>joala/checkstyle.xml</configLocation>
          <headerLocation>joala/LICENSE.txt</headerLocation>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>2.5.2</version>
        <configuration>
          <xmlOutput>true</xmlOutput>
          <!-- Optional directory to put findbugs xdoc xml report -->
          <xmlOutputDirectory>${project.build.directory}/site</xmlOutputDirectory>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>2.7.1</version>
        <configuration>
          <rulesets>
            <ruleset>joala/pmd.xml</ruleset>
          </rulesets>
          <targetJdk>${maven.compiler.target}</targetJdk>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.9</version>
        <configuration>
          <!-- JavaDoc Plugin Options -->
          <additionalJOption>-J-Xmx1024m</additionalJOption>
          <docfilessubdirs>true</docfilessubdirs>
          <bottom>Copyright &amp;#169; {inceptionYear}-{currentYear} {organizationName}. Licensed under the Apache
            License,
            Version 2.0.
          </bottom>
          <author>false</author>
          <links>
            <link>http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/</link>
            <link>http://findbugs.sourceforge.net/api/</link>
            <link>http://docs.mockito.googlecode.com/hg/latest/</link>
          </links>
        </configuration>
        <reportSets>
          <reportSet>
            <id>default</id>
            <reports>
              <report>javadoc</report>
            </reports>
          </reportSet>
          <reportSet>
            <id>aggregate</id>
            <reports>
              <report>aggregate</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>2.3</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>2.5.1</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>2.12.3</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>1.3.1</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>dependency-updates-report</report>
              <report>plugin-updates-report</report>
              <report>property-updates-report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>

  <profiles>
    <profile>
      <id>test-github-site</id>
      <!-- Used in order to test deployment of site to github pages. -->
      <distributionManagement>
        <!-- Workaround for Multi Module Site Deployment with GitHub Plugin -->
        <site>
          <id>github-pages-site</id>
          <name>Deployment through GitHub's site deployment plugin</name>
          <url>site/${project.version}</url>
        </site>
      </distributionManagement>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-site-plugin</artifactId>
              <configuration>
                <!-- On release deployment will be done through GitHub Site Deployment. -->
                <skipDeploy>true</skipDeploy>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <groupId>com.github.github</groupId>
            <artifactId>site-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>release</id>
      <distributionManagement>
        <!-- Workaround for Multi Module Site Deployment with GitHub Plugin -->
        <site>
          <id>github-pages-site</id>
          <name>Deployment through GitHub's site deployment plugin</name>
          <url>site/${project.version}</url>
        </site>
      </distributionManagement>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-site-plugin</artifactId>
              <configuration>
                <!-- On release deployment will be done through GitHub Site Deployment. -->
                <skipDeploy>true</skipDeploy>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <groupId>com.github.github</groupId>
            <artifactId>site-maven-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <repositories>
    <repository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>coremedia.external.releases</id>
      <name>CoreMedia CMS</name>
      <url>https://repository.coremedia.com/nexus/content/groups/cms/</url>
      <layout>default</layout>
    </repository>
  </repositories>
</project>
