<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2012 CoreMedia AG
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>7</version>
    <relativePath/>
  </parent>
  <groupId>net.joala</groupId>
  <artifactId>joala-bom</artifactId>
  <version>0.2.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>Joala BOM</name>
  <url>http://coremedia.github.com/joala</url>
  <description><![CDATA[
    Joala is a set of libraries to assist in writing tests based on JUnit testing framework.
    This BOM is meant to be used as dependency with scope import in dependencyManagement section
    in order to provide all Joala artifacts managed to the same version.
  ]]></description>
  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/CoreMedia/joala/issues</url>
  </issueManagement>
  <ciManagement>
    <system>jenkins</system>
    <url>http://pc-ci.coremedia.com/job/joala/</url>
  </ciManagement>
  <organization>
    <name>CoreMedia AG</name>
    <url>http://www.coremedia.com/</url>
  </organization>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <prerequisites>
    <maven>3.0.4</maven>
  </prerequisites>
  <modules>
    <module>parent</module>
    <module>build-tools</module>
    <module>thirdparty-bom</module>
    <module>thirdparty-test-bom</module>
  </modules>
  <scm>
    <connection>scm:git:git@github.com:CoreMedia/joala.git</connection>
    <developerConnection>scm:git:git@github.com:CoreMedia/joala.git</developerConnection>
    <url>https://github.com/CoreMedia/joala</url>
    <tag>HEAD</tag>
  </scm>
  <inceptionYear>2011</inceptionYear>
  <distributionManagement>
    <repository>
      <id>playground</id>
      <name>CoreMedia Playground Releases</name>
      <url>http://repository-build.coremedia.com/nexus/content/repositories/playground.releases</url>
    </repository>
    <snapshotRepository>
      <id>playground</id>
      <name>CoreMedia Playground Snapshots</name>
      <url>http://repository-build.coremedia.com/nexus/content/repositories/playground.snapshots</url>
    </snapshotRepository>
    <!-- Local Deployment, will be overridden by GitHub Pages Deployment on Release -->
    <site>
      <id>local-site</id>
      <name>Deployment as local artifacts</name>
      <url>${local.site.deploy.url}</url>
    </site>
  </distributionManagement>
  <!-- Properties -->
  <properties>
    <github.global.server>github</github.global.server>
    <maven.compiler.source>1.6</maven.compiler.source>
    <maven.compiler.target>1.6</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <local.site.deploy.url>file://${user.home}/target/joala/site</local.site.deploy.url>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>joala-conditions</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>joala-matchers</artifactId>
        <version>${project.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <developers>
    <developer>
      <id>mmichael</id>
      <name>Mark Michaelis</name>
      <email>mark.michaelis@coremedia.com</email>
      <organization>CoreMedia AG</organization>
      <organizationUrl>http://www.coremedia.com/</organizationUrl>
      <roles>
        <role>architect</role>
        <role>developer</role>
      </roles>
      <timezone>+1</timezone>
    </developer>
    <developer>
      <id>fwienber</id>
      <name>Frank Wienberg</name>
      <email>frank.wienberg@coremedia.com</email>
      <organization>CoreMedia AG</organization>
      <organizationUrl>http://www.coremedia.com/</organizationUrl>
      <roles>
        <role>developer</role>
      </roles>
      <timezone>+1</timezone>
    </developer>
    <developer>
      <id>okummer</id>
      <name>Olaf Kummer</name>
      <email>olaf.kummer@coremedia.com</email>
      <organization>CoreMedia AG</organization>
      <organizationUrl>http://www.coremedia.com/</organizationUrl>
      <roles>
        <role>developer</role>
      </roles>
      <timezone>+1</timezone>
    </developer>
    <developer>
      <id>cweitend</id>
      <name>Christian Weitendorf</name>
      <email>christian.weitendorf@coremedia.com</email>
      <organization>CoreMedia AG</organization>
      <organizationUrl>http://www.coremedia.com/</organizationUrl>
      <roles>
        <role>developer</role>
      </roles>
      <timezone>+1</timezone>
    </developer>
  </developers>

  <build>
    <pluginManagement>
      <plugins>
        <!-- see http://code.google.com/p/sortpom/ -->
        <!-- To start: mvn com.google.code.sortpom:maven-sortpom-plugin:sort -->
        <plugin>
          <groupId>com.google.code.sortpom</groupId>
          <artifactId>maven-sortpom-plugin</artifactId>
          <version>2.0.0</version>
          <configuration>
            <!-- POM Code Convention - http://maven.apache.org/developers/conventions/code.html#POM_Code_Convention -->
            <sortOrderFile>recommended_2008_06.xml</sortOrderFile>
            <createBackupFile>false</createBackupFile>
            <expandEmptyElements>false</expandEmptyElements>
            <sortDependencies>true</sortDependencies>
            <sortPlugins>true</sortPlugins>
            <keepBlankLines>true</keepBlankLines>
          </configuration>
        </plugin>
        <!-- Used to check dependency/plugin versions for updates or to adjust the version for Joala -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>1.3.1</version>
          <configuration>
            <generateBackupPoms>false</generateBackupPoms>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.github.github</groupId>
          <artifactId>site-maven-plugin</artifactId>
          <version>0.7</version>
          <configuration>
            <message>Creating site for ${project.artifactId}, ${project.version}</message>
            <!-- Workaround for Multi-Module-Deployment -->
            <path>${project.distributionManagement.site.url}</path>
            <!-- Must not be false as otherwise every other content on GH-pages is deleted. -->
            <merge>true</merge>
          </configuration>
          <executions>
            <execution>
              <id>github-site</id>
              <goals>
                <goal>site</goal>
              </goals>
              <phase>site-deploy</phase>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>2.5</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.7</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.1</version>
          <dependencies>
            <dependency>
              <!--
              | allows markdown syntax for site generation. To use it place files below
              | src/site/markdown/[filename].md
              -->
              <groupId>org.apache.maven.doxia</groupId>
              <artifactId>doxia-module-markdown</artifactId>
              <version>1.3</version>
            </dependency>
          </dependencies>
          <configuration>
            <generateSitemap>true</generateSitemap>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.3.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>2.5.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.5.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>1.1.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>2.5.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.3.2</version>
          <configuration>
            <autoVersionSubmodules>true</autoVersionSubmodules>
            <!--
            | if we don't do clean install javadoc aggregation will fail in release:perform because
            | aggregated javadoc for root project will run before the deploy goal of the submodules and therefore
            | also before the install of the submodules
            -->
            <preparationGoals>clean install</preparationGoals>
            <pushChanges>false</pushChanges>
            <localCheckout>true</localCheckout>
            <releaseProfiles>release</releaseProfiles>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.6</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-scm-plugin</artifactId>
          <version>1.7</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.12.3</version>
          <configuration>
            <junitArtifactName>junit:junit-dep</junitArtifactName>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.8.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.4</version>
          <configuration>
            <skipIfEmpty>true</skipIfEmpty>
            <archive>
              <addMavenDescriptor>false</addMavenDescriptor>
              <forced>false</forced>
              <manifestEntries>
                <Built-By>CoreMedia</Built-By>
                <Build-Jdk>${java.version}</Build-Jdk>
                <Implementation-Title>${project.name} - ${project.artifactId}</Implementation-Title>
                <Implementation-Version>${project.version}</Implementation-Version>
                <Implementation-Build>${maven.build.timestamp}</Implementation-Build>
                <Implementation-Vendor-Id>com.coremedia</Implementation-Vendor-Id>
                <Implementation-Vendor>CoreMedia AG</Implementation-Vendor>
                <X-Compile-Source-JDK>${maven.compiler.source}</X-Compile-Source-JDK>
                <X-Compile-Target-JDK>${maven.compiler.target}</X-Compile-Target-JDK>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>1.4</version>
          <configuration>
            <!-- Skip for the first versions of Joala not deployed to Maven Central -->
            <skip>true</skip>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <!-- Make it available in IDE -->
        <groupId>com.google.code.sortpom</groupId>
        <artifactId>maven-sortpom-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>2.9.1</version>
        <dependencies>
          <dependency>
            <groupId>net.joala</groupId>
            <artifactId>joala-build-tools</artifactId>
            <version>${project.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <DependencyConvergence/>
                <requireNoRepositories>
                  <message>Best Practice is to never define repositories in pom.xml (use a repository manager instead)
                  </message>
                  <allowedRepositories>
                    <allowedRepository>sonatype-nexus-snapshots</allowedRepository>
                  </allowedRepositories>
                </requireNoRepositories>
                <requirePluginVersions>
                  <message>Best Practice is to always define plugin versions!</message>
                </requirePluginVersions>
                <requireUpperBoundDeps/>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>2.5.1</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>2.3</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>2.9.1</version>
        <configuration>
          <configLocation>joala/checkstyle.xml</configLocation>
          <headerLocation>joala/LICENSE.txt</headerLocation>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.8.1</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>2.12.3</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>1.3.1</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>dependency-updates-report</report>
              <report>plugin-updates-report</report>
              <report>property-updates-report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <!--
<plugin>
         <groupId>org.apache.maven.plugins</groupId>


         <artifactId>maven-pmd-plugin</artifactId>
         <version>2.7.1</version>
         <configuration>
            <targetjdk>1.5</targetjdk>
            <rulesets>
               <ruleset>/rulesets/basic.xml</ruleset>
               <ruleset>/rulesets/controversial.xml</ruleset>
            </rulesets>
            <format>xml</format>
            <linkXref>true</linkXref>
            <sourceEncoding>utf-8</sourceEncoding>


            <minimumTokens>100</minimumTokens>
         </configuration>
      </plugin>
-->
    </plugins>
  </reporting>

  <profiles>
    <profile>
      <id>release</id>
      <distributionManagement>
        <!-- Workaround for Multi Module Site Deployment with GitHub Plugin -->
        <site>
          <id>github-pages-site</id>
          <name>Deployment through GitHub's site deployment plugin</name>
          <url>site/${project.version}</url>
        </site>
      </distributionManagement>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-site-plugin</artifactId>
              <configuration>
                <!-- On release deployment will be done through GitHub Site Deployment. -->
                <skipDeploy>true</skipDeploy>
              </configuration>
            </plugin>
            <plugin>
              <groupId>com.github.github</groupId>
              <artifactId>site-maven-plugin</artifactId>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
